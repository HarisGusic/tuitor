.TH TUTERM 1
.SH NAME
tuterm \- a framework to create tutorials and demonstrations of CLI programs.
.SH SYNOPSIS
\fBtuterm\fR [\fB-h\fR]

\fBtuterm\fR [COMMAND] [OPTIONS]

.SH DESCRIPTION
Tuterm is a script that provides functions to easily create tutorials for CLI
programs. It allows you to create interactive tutorials (scripts), test program
functionality and create automated demonstrations - all with the same code.
It can also be used in conjunction with asciinema to create automated
recordings.

.TP
The following subcommands are available:

tut \- run an interactive tutorial (default)

demo \- play out all commands without user interaction

.SH OPTIONS
.TP
.BR \-h ", " \-\-help 
Prints help message.
.TP
.BR \-v ", " \-\-version 
Prints program version. TODO implement
.TP
.BR \-f ", " \-\-fast
Do not type characters in real time.
.TP
.BR \-s ", " \-\-server
This instance of tuterm will be a server, i.e. it will only show instructions to
the user. To enable user interaction, run tuterm again with the \fB\-\-client\fR
option.
.TP
.BR \-c ", " \-\-client
This instance of tuterm will be a client. It will provide user interaction while
a server (tuterm invoked with \fB\-\-server\fR) will show instructions to the
user. The PID of the associated server is provided as an argument. If no
argument is provided, a server will be determined automatically.

.SH ENVIRONMENT
Environment or shell variables are used to configure the behavior of tuterm.
.TP
Variables
DELAY \- time it takes to type out a character

DELAY_SEP \- time it takes to type out a separator (-, /, etc.). Falls back to
DELAY if undefined

DELAY_PROMPT \- time it takes to start typing after the prompt is displayed

COLOR_CMDLINE \- color of expected user input

COLOR_WARNING \- color of warning messages

SHELL \- which shell's prompt to use (TODO)

.TP
Commands
cmdline (alias: c) \- show prompt and command
color \- set output color to the one provided as argument (see
\fIterminal-colors.d(5)\fR for supported formats)

.TP
User-overridable functions
prompt \- command line prompt

.SH TUTORIAL FILE
.TP
Tutorial files are nothing but shell scripts with only a few caveats:

1. Configuration is performed inside a user-defined \fBconfigure\fR function

2. Tutorial commands are run inside a user-defined \fBrun\fR function

3. Variable names outside of \fBconfigure\fR should not clash with configuration
variables

.RE
In most cases you don't even have to follow these guidelines, but it is
recommended in order to get consistent behavior.
